{"ast":null,"code":"var _jsxFileName = \"/Users/isabelzhang/Documents/GitHub/Agile2020AccountingNotebook/frontend/src/App.tsx\";\nimport React from 'react';\nimport './App.css';\nimport { Box, Button } from '@material-ui/core';\nimport { TransactionList } from './components/TransactionList';\nimport { TransactionsRepository } from './repositories/Transactions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.transactionsRepository = void 0;\n    this.state = {\n      transactionsError: false,\n      transactions: []\n    };\n    this.transactionsRepository = new TransactionsRepository();\n    this.reloadTransactions = this.reloadTransactions.bind(this);\n  }\n\n  async reloadTransactions() {\n    try {\n      const transactions = await this.transactionsRepository.getAll();\n      this.setState({\n        transactionsError: false,\n        transactions: transactions\n      });\n    } catch (e) {\n      this.setState({\n        transactionsError: true,\n        transactions: []\n      });\n      console.error(`Error while getting transactions: ${e}`);\n    }\n  }\n\n  async componentDidMount() {\n    await this.reloadTransactions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Accounting Notebook\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.reloadTransactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Reload\"), /*#__PURE__*/React.createElement(Box, {\n      className: \"App-separator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, this.state.transactionsError ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"There was an error loading your transactions.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 64\n      }\n    }), \"Try again please.\") : this.state.transactions.length ? /*#__PURE__*/React.createElement(TransactionList, {\n      transactions: this.state.transactions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"No transactions received.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 46\n      }\n    }), \"Try reloading from server.\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/isabelzhang/Documents/GitHub/Agile2020AccountingNotebook/frontend/src/App.tsx"],"names":["React","Box","Button","TransactionList","TransactionsRepository","App","Component","constructor","props","transactionsRepository","state","transactionsError","transactions","reloadTransactions","bind","getAll","setState","e","console","error","componentDidMount","render","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,SAASC,GAAT,EAAcC,MAAd,QAA4B,mBAA5B;AAGA,SAASC,eAAT,QAAgC,8BAAhC;AACA,SAASC,sBAAT,QAAuC,6BAAvC;;AAOA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiD;AAG/CC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AADsB,SAFhBC,sBAEgB;AAEtB,SAAKC,KAAL,GAAa;AACXC,MAAAA,iBAAiB,EAAE,KADR;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAKA,SAAKH,sBAAL,GAA8B,IAAIL,sBAAJ,EAA9B;AACA,SAAKS,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACD;;AAED,QAAMD,kBAAN,GAA2B;AACzB,QAAI;AACF,YAAMD,YAAY,GAAG,MAAM,KAAKH,sBAAL,CAA4BM,MAA5B,EAA3B;AACA,WAAKC,QAAL,CAAc;AAACL,QAAAA,iBAAiB,EAAE,KAApB;AAA2BC,QAAAA,YAAY,EAAEA;AAAzC,OAAd;AACD,KAHD,CAGE,OAAOK,CAAP,EAAU;AACV,WAAKD,QAAL,CAAc;AAACL,QAAAA,iBAAiB,EAAE,IAApB;AAA0BC,QAAAA,YAAY,EAAE;AAAxC,OAAd;AACAM,MAAAA,OAAO,CAACC,KAAR,CAAe,qCAAoCF,CAAE,EAArD;AACD;AACF;;AAED,QAAMG,iBAAN,GAA0B;AACxB,UAAM,KAAKP,kBAAL,EAAN;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,OAAO,EAAE,KAAKR,kBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWC,iBAAX,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qEAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjD,sBADH,GAEG,KAAKD,KAAL,CAAWE,YAAX,CAAwBU,MAAxB,gBACE,oBAAC,eAAD;AAAiB,MAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWE,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7B,+BALR,CANF,CADF;AAgBD;;AA7C8C;;AAgDjD,eAAeP,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport { Box, Button } from '@material-ui/core';\n\nimport { Transaction } from './components/Transaction';\nimport { TransactionList } from './components/TransactionList';\nimport { TransactionsRepository } from './repositories/Transactions';\n\ninterface AppState {\n  transactionsError: boolean;\n  transactions: Transaction[];\n}\n\nclass App extends React.Component<any, AppState> {\n  private transactionsRepository: TransactionsRepository;\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      transactionsError: false,\n      transactions: [],\n    };\n\n    this.transactionsRepository = new TransactionsRepository();\n    this.reloadTransactions = this.reloadTransactions.bind(this);\n  }\n\n  async reloadTransactions() {\n    try {\n      const transactions = await this.transactionsRepository.getAll();\n      this.setState({transactionsError: false, transactions: transactions});\n    } catch (e) {\n      this.setState({transactionsError: true, transactions: []});\n      console.error(`Error while getting transactions: ${e}`);\n    }\n  }\n\n  async componentDidMount() {\n    await this.reloadTransactions();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-header\">Accounting Notebook</h1>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.reloadTransactions}>Reload</Button>\n\n        <Box className=\"App-separator\"/>\n\n        <div className=\"App-body\">\n          {this.state.transactionsError\n            ? <h2>There was an error loading your transactions.<br/>Try again please.</h2>\n            : this.state.transactions.length\n              ? <TransactionList transactions={this.state.transactions}/>\n              : <h2>No transactions received.<br/>Try reloading from server.</h2>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}